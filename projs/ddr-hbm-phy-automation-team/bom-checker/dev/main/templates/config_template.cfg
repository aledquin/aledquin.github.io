#------------------------------------------------------------------------------
# BOM OWNER RELATED
#------------------------------------------------------------------------------
   $globals{'fname_MM_XLSX'}     = "<BOM_Excel_Filename>.xlsx";
   $globals{'XLSX_sheet_name'}   = "MM";

   #------------------------------------------------------------------------------
   #  Setup a dictionary that defines the LEXICON allowed for file SPECs 
   #      There's two scopes ... global => applies uniformly across all components
   #                         ... local  => applies in context of single component
   #------------------------------------------------------------------------------
   $globals{'global_dictionary'} = {
        'allowed_literals' =>  [ qw( phyPrefix uniqPrefix process ) ],
        };
   $globals{'local_dictionary'} = {
        'allowed_literals' =>  [ qw( cell_name orientation version ) ],
        'allowed_lists'    =>  [ qw( timing_cases mstack pvt_combos pvt_values pvt_corners ) ],
        };
   $globals{'file_SPEC_variables'} = {
        'phyPrefix'   => '<phyPrefix>',      # used to capture the prefix used for most files
        'uniqPrefix'  => '<uniqPrefix>',     # used to capture the prefix used for most files
        'process'     => '<process>',        # used if a process variable defined in MM
        'conditional' => '<condition>',      # used if a condition is defined in MM
   };

#------------------------------------------------------------------------------
# USER BASED CONFIG
#------------------------------------------------------------------------------
   #------------------------------------------------------------------------------
   # User details for specifying the release configuration that want to use
   # and the list of components that want to generate the expected BOM.
   #------------------------------------------------------------------------------
      $globals{'release_to_check'} = '<release name>';
      $globals{'bom__cell_names'}  = [ qw( cell1 cell2 cell3 ) ];  # just check hard macros
      # name of the release you want checked (Essentialy a release phase)
      #$globals{'bom__phase_name'}  = 'Eval Kit';
      #$globals{'bom__phase_name'}  = 'Prelim';
      #$globals{'bom__phase_name'}  = 'Pre-Final';
      $globals{'bom__phase_name'}  = 'Final';

#------------------------------------------------------------------------------
# The following parameters are setting that control parsing of the MM itself.
# The general concept of what's needed is information that defines
# where to look for critical pieces of information.
#
# CSV_index_REL => defines the column # to use for the release phase
# Example : user wants to check a 'Pre-Final' release defined
# by column 30
# CSV_index_FILES => the col number where the file specs are defined
# CSV_index_VIEWS => the col number where the view names are defined
# CSV_index_COND => the col number where conditionals are defined
#------------------------------------------------------------------------------
$globals{'CSV_index_FILES'} = 17; # col number - file names
$globals{'CSV_index_VIEWS'} = 16; # col number - view names
$globals{'CSV_index_COND'} = 4;   # col number - "condition" (in row with cell names)

 # enter row # where we expect the "manifest_name" labels
$globals{'row__manifest_names'}= '7'; # row number - row with manifest names (i.e. BOM, d714, d812, etc)
$globals{'row__bom_start'} = '10';    # row number - 1st row of the bom details
$globals{'row__cell_names'} = '8';    # row number - row where cell names listed

#------------------------------------------------------------------------------
# ViCi API tool to grab VICI info 
#------------------------------------------------------------------------------
#$globals{'ViCi_Script'} = "/remote/cad-rep/msip/tools/Shelltools/bom-checker/2021.10/scripts/get_vici_info.pl"; # ViCi script

   #------------------------------------------------------------------------------
   # Release data based on BOM 
   #------------------------------------------------------------------------------
   $globals{'<release name>'} =  sub {  ## Release name must match $globals{'release_to_check'} value
      my $misc = {
	       'base_path'   => '<base_path>',
			   'vici_url'    => 'http://vici/releasePageConstruct/index/id/<product_id>/page_id/<page_id>',
			   'vars_that_get_inherited_by_cells' => [ 'vici_url', 'mstack_regex', 'PVT_regex', 'pdvs' ],
			   'mstack_regex'=> '^PHY Metal Option: (.*)$',
			   'PVT_regex'   => 'PVT options : (.*)',                                ## Gets all the PVT corners
			   #'PVT_regex'   => 'Standard Product Release : PVT options : (.*)',    ## Custom corner type PVTs only (Standard Product Release)
			   'pdvs' => [ qw( ant erc drcdm drcdpd drcmini drcpm drcautomotive drcpode drcshdmim esd pad padfc dfm lup ) ],
         #------------------------------------------------------------------------------
         # User can specify REGEX to use that will waiver (filter out) files from
         #   the lists being compared. User can also search for a REGEX and replace it       #       '\/ibis_ami\/', 
         #   with a value as well, which was found useful for comparing two releases.
         #------------------------------------------------------------------------------
         'inspector__REF_waivers' => [ ],
         'inspector__REL_waivers' => [ ],
         'inspector__REF_find_n_replace' => { },
         'inspector__REL_find_n_replace' => { },
	    };

      #------------------------------------------------------------------------
      #  Specify all details for each of the components in the BOM
	    #  Valid fields include :
			#   'dirname'     => "phyinit",  => value defines the name used for the
      #               directory path name,  which is required when the
      #               component name in the Manifest doesn't match the
      #               directory name
			#   'cell_name'   => "phyinit",  => value replaces ${cell_name} in Manifest
			#   'viciname'    => "phyinit",  => needed for corner cases where the
      #               component name in ViCi doesn't match the Manifest name
      #               This is a corner case seen a few times, but rarely needed
			#   'mstack_regex'=> '',   => if default REGEX isn't working then 
      #               it's a corner case and you'll want to specify a custom
      #               regex that can parse custom content in ViCi 
			#   'PVT_regex'=> '',   => if default REGEX isn't working then 
      #               it's a corner case and you'll want to specify a custom
      #               regex that can parse custom content in ViCi 
			#   'vici_url'  => 'http://vici/releasePageConstruct/index/id/25748/page_id/914',
			#               Most of the time, a single URL is needed, but corner
      #               cases require need to customize per component (e.g. hbm)
			#   'version_regex'=> '^phyinit\w+ : (\S+-\S+-\S+$)',
      #               default version_regex works for hard components,
      #               but not for soft, so override for soft components
      #               Default : 'version_regex' => "^$cell_name" . '.*:\s+(\d\.\d+\w+)$';
      #  
      #------------------------------------------------------------------------
      my $href_cells = {
	    'cell1'  => {
			   'timing_cases'=> [ '' ],
			   'overrides'   => { 
                     'orientation' => '_ew',
                     'mstack' => [ '6M_1X_h_1Xa_v_1Ya_h_2Y_vh', '8M_1X_h_1Xa_v_1Ya_h_2Y_vh' ],
                },
        },
	    'cell2'  => {
			   'timing_cases'=> [ '' ],
			   'overrides'   => { 
                     'orientation' => '_ns',
                     'base_path'   => '<custom basepath>',
                     #'mstack' => [ '8M_1X_h_1Xa_v_1Ya_h_2Y_vh' ],
                },
        },
	    'cell3'  => {
			   'timing_cases'=> [ '' ],
			   'overrides'   => { 
                     'orientation' => '_ns',
                },
        },
     },

   };

   return( $href_cells, $misc );
