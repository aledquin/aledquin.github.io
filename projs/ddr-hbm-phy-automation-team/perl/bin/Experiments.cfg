<jira_queries>
   pj_open = assignee = juliano AND resolution = Unresolved AND summary !~ TEMPLATE 
</jira_queries>
#-----------------------------------------------------
<escalations>
   <sw_author>
      from juliano
      to   juliano
      cc   juliano
   </sw_author>
</escalations>
#-----------------------------------------------------
<email_templates>
   <test_emails>
   subject = <thispolicy->desc>
   body <<EOT
~~pre!!

~~/pre!!
EOT
   </test_emails>
</email_valids>
#-----------------------------------------------------
<policies>
   <policy8>
       desc       = This is the description I chose to use for the policy 'policy8'!
       jql        = pj_open
       escalation = sw_author
       template   = test_emails
       active     = TRUE
   </policy8>
</policies>
<special_html_tags>
   start = **
   stop  = &&
</special_html_tags>


#--------------------------------------------------
#  JIRA fields used to generate escalation policies
#--------------------------------------------------
<jira_fields>
   updated  = fields/updated
   reporter = fields/reporter/name
   summary  = fields/summary
##############################################
##--Don't touch these below lines
###############################################
   status   = fields/status/name
   assignee = fields/assignee/name
   due_date = fields/duedate
   priority = fields/priority/name
   created  = fields/created
</jira_fields>
#-----------------------------------------------------
highest_level_mgr = toffolon
#-----------------------------------------------------
psql_cmd = psql -h vici -p 5432 -U read_only -d msip_lookup_db -A -c \"select * from snps_users where empcode ~ '(Active|Inactive)' and mgr_chain ~ '(<highest_level_mgr>)' or email like '<highest_level_mgr>'" 
#-----------------------------------------------------
#psql_filename = psql.<highest_level_mgr>.txt
<psql_fields>
   employee      = email
   mgmt_chain    = mgr_chain
# misc available fields 
#   id      = id
#   name    = firstname
#   lastname= lastname
#   badge   = badge
#   uid     = uid
#   title   = title
#   job     = job_function
#   manager_email= manager_email
#   is_lay_engr  = is_layout_engineer
#   is_mgr       = is_a_manager
#   photo_url    = photo_link
#   site         = site
#   pager        = pager
#   b_unit       = b_unit
#   b_grp        = b_group
#   bgrp_acro2   = b_group_a
#   hire_date    = hire_date
#   last_date    = last_date
#   notes        = user_notes
#   emp_type     = emp_type
#   support_type = support_type
#   bgrp_acro2   = b_group_m
#   updated      = updated_at
</psql_fields>

jira_env = prod

##############################################
maxResults  = 100
outputFomat = xml
filenme__jql_output = jira.8da-list.xml
filenme__xls_output = jira.8da-list.xlsx

test_random_nested_reference = <random->r1->nested->n1->lval>

xls_jira_query_data_fname = policymakers.xlsx
xls_jira_query_data_sheetname = Sheet1

xls_orgdata_fname = experiment.xlsx
xls_orgdata_sheetname = Org

<random r1>
   <nested n1>
      lval = random_nested_rval
   </nested>
</random>
